/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 1>;
            then-layer = <3>;
        };
    };

    macros {
        Divider: Divider {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS>;
            label = "DIVIDER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                 &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G                 &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B                 &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT ENTER
                  &none  &kp LALT  &mo 0  &kp SPACE  &kp SPACE  &mo 0  &kp RCTRL  &none
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans         &trans        &trans         &Divider      &trans                 &kp MINUS  &kp N7  &kp N8  &kp N9  &kp PLUS  &trans
&trans  &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)          &kp DOT    &kp N4  &kp N5  &kp N6  &trans    &trans
&trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)  &kp LS(RPAR)           &kp N0     &kp N1  &kp N2  &kp N3  &kp FSLH  &trans
                       &trans        &trans         &trans        &trans         &trans  &trans     &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &kp F5  &trans          &trans        &trans        &trans        &trans        &trans        &trans
                &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans
            >;
        };
    };
};
